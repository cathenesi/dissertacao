import controle.evento.*;
import controle.dominio.*;
import controle.dominio.identificador.*;
import controle.agente.atuador.*

declare EventoNumeroRequisicoesSimultaneas
	@role( event )
	@expires( 1s )
end

declare EventoInstanciaAtiva
	@role( event )
	@expires( 1s )
end

declare EventoInstanciaInativa
	@role( event )
	@expires( 1s )
end

rule "RA1"
	activation-group "ExecutorConsulta"
	no-loop true
when 
	$evento : EventoInstanciaInativa(identificadorElementoGerenciado != null)
	from entry-point "FluxoDeEventos"
	$elemento : Atributo(identificador == $evento.identificadorAtributoElementoGerenciado 
							&& programa.identificador == $evento.getIdentificadorElementoGerenciado() );
then
	modify ($elemento) {
		setEstadoAtual(Estado.INATIVO);
	}
end

rule "RA2"
	activation-group "ExecutorConsulta"
	no-loop true
when 
	$evento : EventoInstanciaAtiva(identificadorElementoGerenciado != null)
	from entry-point "FluxoDeEventos"
	$elemento : Atributo(identificador == $evento.identificadorAtributoElementoGerenciado 
							&& programa.identificador == $evento.getIdentificadorElementoGerenciado() );
then
	modify ($elemento) {
		setEstadoAtual(Estado.NORMAL);
	}
end

rule "RA3"
	activation-group "Balanceador"
	no-loop true
when 
	$evento : EventoNumeroRequisicoesSimultaneas(numeroRequisicoes <= 10)
	from entry-point "FluxoDeEventos"
	$elemento : Atributo(identificador == IdentificadorAtributoElementoGerenciado.NUMERO_REQUISICOES_SIMULTANEAS 
							&& programa.identificador == IdentificadorElementoGerenciado.BALANCEADOR);
then
	modify ($elemento) {
		setEstadoAtual(Estado.NORMAL);
	}
	modify ($elemento) {
		setValorAtual($evento.getNumeroRequisicoes().toString());
	}
end

rule "RA4"
	activation-group "Balanceador"
	no-loop true
when 
	$evento : EventoNumeroRequisicoesSimultaneas(numeroRequisicoes > 10 && numeroRequisicoes <= 20)
	from entry-point "FluxoDeEventos"
	$elemento : Atributo(identificador == IdentificadorAtributoElementoGerenciado.NUMERO_REQUISICOES_SIMULTANEAS 
							&& programa.identificador == IdentificadorElementoGerenciado.BALANCEADOR);
then
	modify ($elemento) {
		setEstadoAtual(Estado.ALERTA);
	}
	modify ($elemento) {
		setValorAtual($evento.getNumeroRequisicoes().toString());
	}
end

rule "RA5"
	activation-group "Balanceador"
	no-loop true
when 
	$evento : EventoNumeroRequisicoesSimultaneas(numeroRequisicoes > 100)
	from entry-point "FluxoDeEventos"
	$elemento : Atributo(identificador == IdentificadorAtributoElementoGerenciado.NUMERO_REQUISICOES_SIMULTANEAS 
							&& programa.identificador == IdentificadorElementoGerenciado.BALANCEADOR);
then
	modify ($elemento) {
		setEstadoAtual(Estado.CRITICO);
	}
	modify ($elemento) {
		setValorAtual($evento.getNumeroRequisicoes().toString());
	}
end